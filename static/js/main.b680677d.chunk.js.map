{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","_ref","total","perPage","currentPage","onPageChange","totalPages","Math","ceil","links","_loop","i","push","_jsx","className","concat","children","href","onClick","_jsxs","items","from","to","numbers","n","getNumbers","map","App","_useState","useState","_useState2","_slicedToArray","setCurrentPage","_useState3","_useState4","itemPage","setItemPage","length","firstItem","lastItem","preparedItem","_toConsumableArray","slice","id","value","onChange","event","target","htmlFor","page","item","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b680677d.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  total: number; // total number of items to paginate\n  perPage: number;// number of items per page\n  currentPage: number; /* optional with 1 by default */\n  onPageChange: (page:number) => void;\n};\n\nexport const Pagination:React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const totalPages = Math.ceil(total / perPage);\n  const links = [];\n\n  const prevPageHandler = () => {\n    if (currentPage === 1) {\n      return;\n    }\n\n    onPageChange(currentPage - 1);\n  };\n\n  const nextPageHandler = () => {\n    if (currentPage === totalPages) {\n      return;\n    }\n\n    onPageChange(currentPage + 1);\n  };\n\n  for (let i = 1; i <= totalPages; i += 1) {\n    links.push(\n      <li\n        className={`page-item ${i === currentPage ? 'active' : ''}`}\n        key={i}\n      >\n        <a\n          data-cy=\"pageLink\"\n          className=\"page-link\"\n          href={`#${i}`}\n          onClick={() => onPageChange(i)}\n        >\n          {i}\n        </a>\n      </li>,\n    );\n  }\n\n  return (\n    <ul className=\"pagination\">\n      <li className={`page-item ${currentPage === 1 ? 'disabled' : ''}`}>\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1}\n          onClick={prevPageHandler}\n        >\n          «\n        </a>\n      </li>\n      {links}\n      <li className={`page-item ${currentPage === totalPages ? 'disabled' : ''}`}>\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === totalPages}\n          onClick={nextPageHandler}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemPage, setItemPage] = useState(5);\n\n  const total = items.length;\n  const firstItem = (currentPage - 1) * itemPage;\n  const lastItem = (firstItem + itemPage) < total\n    ? firstItem + itemPage : total;\n\n  const preparedItem = [...items].slice(firstItem, lastItem);\n\n  const selectChange = (event:React.ChangeEvent<HTMLSelectElement>) => {\n    setCurrentPage(1);\n    setItemPage(+event.target.value);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstItem + 1} - ${lastItem} of ${total})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={itemPage}\n            onChange={selectChange}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={total}\n        currentPage={currentPage}\n        perPage={itemPage}\n        onPageChange={(page) => setCurrentPage(page)}\n      />\n      {preparedItem.map(item => (\n        <ul key={item}>\n          <li data-cy=\"item\">{`${item}`}</li>\n        </ul>\n      ))}\n\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}